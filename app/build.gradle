apply plugin: "java"
apply plugin: "idea"
apply plugin: "jacoco"
apply plugin: "kotlin"
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: "eclipse"

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

//sourceSets {
//    main {
//        kotlin {
//            srcDir 'kotlin'
//        }
//    }
//
//    test {
//        kotlin {
//            srcDir 'kotlin'
//        }
//    }
//}
//


configurations { codacy }


jacoco {
    toolVersion = "0.7.8"
}


jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        //sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled true
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

task sendCoverageToCodacy(type: JavaExec, dependsOn: jacocoTestReport) {
    main = "com.codacy.CodacyCoverageReporter"
    classpath = configurations.codacy
    args = [
            "-l",
            "Java",
            "-r",
            "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    ]
}


dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //compile "joda-time:joda-time:2.3+"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4'
    codacy 'com.github.codacy:codacy-coverage-reporter:-SNAPSHOT'

    testCompile "com.google.guava:guava:16+"
    testCompile "org.assertj:assertj-core:3.2.0"
    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
}

test {
    testLogging {
        exceptionFormat = 'full'
        events = ["passed", "failed", "skipped"]
    }
}